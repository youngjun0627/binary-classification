# -*- coding: utf-8 -*-
"""transform.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CAhHrMA3Pg403szXpku4vABuSNnooMyA
"""

import albumentations

def create_train_transform(flip,noise, clahe, cutout, normalize, resize, size = 224, bright=True):
    translist=[]
    ### resize
    if resize:
        translist+=[albumentations.Resize(size+30,size+30)]
        translist+=[albumentations.RandomCrop(size,size,always_apply=True)]
    if flip:
        if resize:
            translist+=[albumentations.OneOf([
                        albumentations.HorizontalFlip(),
                        albumentations.RandomRotate90(),
                        albumentations.VerticalFlip()],p=0.5)]
        else:
            translist+=[albumentations.OneOf([
                        albumentations.HorizontalFlip(),
                        albumentations.VerticalFlip()],p=0.5)]
    ### gaussnoise
    if noise:
        translist+=[albumentations.OneOf([
                        albumentations.MotionBlur(blur_limit=5),
                        albumentations.MedianBlur(blur_limit=5),
                        albumentations.OpticalDistortion(),
                        albumentations.GaussNoise(var_limit=(5.0,30.0))], p=0.5)]
    if bright:
        translist+=[albumentations.RandomBrightness(limit=0.2, always_apply=False)]
    if clahe:
        translist+=[albumentations.CLAHE(clip_limit=4.0, p=0.1)]
    if cutout:
        if resize:
            translist+= [albumentations.Cutout(max_h_size = int(size * 0.2), max_w_size = int(size * 0.2), num_holes = 1,p=0.3)]
        else:
            translist+= [albumentations.Cutout(max_h_size = int(1118 * 0.2), max_w_size = int(1668 * 0.2), num_holes = 1,p=0.3)]
    if normalize:
        translist+=[albumentations.Normalize(mean = (0.4927, 0.4578, 0.4200), std = (0.2303, 0.2248, 0.2236))]
    transform = albumentations.Compose(translist)
    return transform

def create_val_transform(normalize, resize, size = 224):
    vallist = []
    if resize:
        vallist+=[albumentations.Resize(size,size)]
    if normalize:
        vallist+=[albumentations.Normalize(mean = (0.4927, 0.4578, 0.4200), std = (0.2303, 0.2248, 0.2236))]
    transform = albumentations.Compose(vallist)
    return transform